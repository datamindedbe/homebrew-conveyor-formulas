name: Check homebrew recipe and modify versions if necessary

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths:
      - '.github/workflows/update_recipe.yml'

jobs:
  checkupdate:
    runs-on: ubuntu-latest
    env:
      RECIPE: Formula/datafy.rb
    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Check latest version
      id: latest
      run: |
        echo "::set-output name=version::$(curl -s https://app.datafy.cloud/api/info/cli/version)"

    - name: Check current version
      id: current
      run: |
        echo "::set-output name=version::$(grep 'version \".*\"' $RECIPE | grep -o '[0-9]*\.[0-9]*.[0-9]*')"

    - name: Check if they are the same
      id: same
      run: |
        current=${{ steps.current.outputs.version }}
        latest=${{ steps.latest.outputs.version }}
        echo $latest
        echo $current
        echo "::set-output name=version::$(if [ $latest == $current ]; then echo 'true'; else echo 'false'; fi)"

    - name: Modify recipe if they are different
      if: steps.same.outputs.version == 'false'
      run: |
        version=${{ steps.latest.outputs.version }}
        old_version=${{ steps.current.outputs.version }}
        pathmac=datafy_mac.tar.gz
        pathlinux=datafy_linux.tar.gz
        curl -sL https://datafy-cp-artifacts.s3-eu-west-1.amazonaws.com/cli/${version}/datafy_darwin_amd64.tar.gz -o $pathmac
        curl -sL https://datafy-cp-artifacts.s3-eu-west-1.amazonaws.com/cli/${version}/datafy_linux_amd64.tar.gz -o $pathlinux
        sma=($(sha256sum $pathmac))
        sma=${sma[0]}
        sli=($(sha256sum $pathlinux))
        sli=${sli[0]}
        shas=($sma $sli)
        sed -i "s:${old_version}:${version}:g" $RECIPE
        index=$((0))
        grep "sha256" $RECIPE | grep -o "\"[0-9a-f]\+\"" | while read -r line; do sed -i "s:${line}:\"${shas[$index]}\":g" $RECIPE && index=$((index+1)) ; done
        rm $pathmac
        rm $pathlinux

    - name: Trigger a pull request
      uses: peter-evans/create-pull-request@v3
      with:
        commit-message: Updated from version ${{ steps.current.outputs.version }} to ${{ steps.latest.outputs.version }}
